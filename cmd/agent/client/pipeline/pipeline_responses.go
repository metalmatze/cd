// Code generated by go-swagger; DO NOT EDIT.

package pipeline

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/signalcd/signalcd/cmd/agent/models"
)

// PipelineReader is a Reader for the Pipeline structure.
type PipelineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PipelineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPipelineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPipelineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPipelineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPipelineOK creates a PipelineOK with default headers values
func NewPipelineOK() *PipelineOK {
	return &PipelineOK{}
}

/*PipelineOK handles this case with default header values.

OK
*/
type PipelineOK struct {
	Payload *models.Pipeline
}

func (o *PipelineOK) Error() string {
	return fmt.Sprintf("[GET /pipelines/{id}][%d] pipelineOK  %+v", 200, o.Payload)
}

func (o *PipelineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Pipeline)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPipelineBadRequest creates a PipelineBadRequest with default headers values
func NewPipelineBadRequest() *PipelineBadRequest {
	return &PipelineBadRequest{}
}

/*PipelineBadRequest handles this case with default header values.

bad request
*/
type PipelineBadRequest struct {
}

func (o *PipelineBadRequest) Error() string {
	return fmt.Sprintf("[GET /pipelines/{id}][%d] pipelineBadRequest ", 400)
}

func (o *PipelineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPipelineInternalServerError creates a PipelineInternalServerError with default headers values
func NewPipelineInternalServerError() *PipelineInternalServerError {
	return &PipelineInternalServerError{}
}

/*PipelineInternalServerError handles this case with default header values.

internal server error
*/
type PipelineInternalServerError struct {
}

func (o *PipelineInternalServerError) Error() string {
	return fmt.Sprintf("[GET /pipelines/{id}][%d] pipelineInternalServerError ", 500)
}

func (o *PipelineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
