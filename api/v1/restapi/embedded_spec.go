// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Swagger 2.0 specification for CD",
    "title": "CD Swagger Spec",
    "termsOfService": "http://swagger.io/terms/",
    "version": "v0.01"
  },
  "host": "localhost:6660",
  "basePath": "/v1",
  "paths": {
    "/pipeline": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "Returns the current executed pipeline",
        "operationId": "pipelineCurrent",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pipeline"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/pipeline/{id}": {
      "patch": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "updates the current pipeline",
        "operationId": "updateCurrentPipeline",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "The current pipeline was updated successfully"
          },
          "400": {
            "description": "bad request"
          },
          "default": {
            "description": "internal server error"
          }
        }
      }
    },
    "/pipelines": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "returns a list of all pipelines",
        "operationId": "pipelines",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pipeline"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/pipelines/status": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "returns the status of a running agent",
        "operationId": "pipelineAgents",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "updates the status of a running agent",
        "operationId": "updatePipelineAgents",
        "parameters": [
          {
            "name": "options",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "agent",
                "healthy"
              ],
              "properties": {
                "agent": {
                  "type": "string",
                  "format": "uuid"
                },
                "healthy": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/pipelines/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "returns a pipeline by id",
        "operationId": "pipeline",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "check": {
      "required": [
        "name",
        "image"
      ],
      "properties": {
        "duration": {
          "type": "number"
        },
        "environment": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "image": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "pipeline": {
      "required": [
        "id"
      ],
      "properties": {
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/check"
          }
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        }
      }
    },
    "step": {
      "required": [
        "name",
        "image"
      ],
      "properties": {
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "image": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "description": "manage pipelines",
      "name": "pipeline"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Swagger 2.0 specification for CD",
    "title": "CD Swagger Spec",
    "termsOfService": "http://swagger.io/terms/",
    "version": "v0.01"
  },
  "host": "localhost:6660",
  "basePath": "/v1",
  "paths": {
    "/pipeline": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "Returns the current executed pipeline",
        "operationId": "pipelineCurrent",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pipeline"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/pipeline/{id}": {
      "patch": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "updates the current pipeline",
        "operationId": "updateCurrentPipeline",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "The current pipeline was updated successfully"
          },
          "400": {
            "description": "bad request"
          },
          "default": {
            "description": "internal server error"
          }
        }
      }
    },
    "/pipelines": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "returns a list of all pipelines",
        "operationId": "pipelines",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pipeline"
              }
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/pipelines/status": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "returns the status of a running agent",
        "operationId": "pipelineAgents",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "updates the status of a running agent",
        "operationId": "updatePipelineAgents",
        "parameters": [
          {
            "name": "options",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "agent",
                "healthy"
              ],
              "properties": {
                "agent": {
                  "type": "string",
                  "format": "uuid"
                },
                "healthy": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/pipelines/{id}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "pipeline"
        ],
        "summary": "returns a pipeline by id",
        "operationId": "pipeline",
        "parameters": [
          {
            "type": "string",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          },
          "400": {
            "description": "bad request"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "check": {
      "required": [
        "name",
        "image"
      ],
      "properties": {
        "duration": {
          "type": "number"
        },
        "environment": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "image": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "pipeline": {
      "required": [
        "id"
      ],
      "properties": {
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/check"
          }
        },
        "id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/step"
          }
        }
      }
    },
    "step": {
      "required": [
        "name",
        "image"
      ],
      "properties": {
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "image": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "description": "manage pipelines",
      "name": "pipeline"
    }
  ]
}`))
}
