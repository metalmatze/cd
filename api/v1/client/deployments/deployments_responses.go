// Code generated by go-swagger; DO NOT EDIT.

package deployments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/signalcd/signalcd/api/v1/models"
)

// DeploymentsReader is a Reader for the Deployments structure.
type DeploymentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeploymentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeploymentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewDeploymentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeploymentsOK creates a DeploymentsOK with default headers values
func NewDeploymentsOK() *DeploymentsOK {
	return &DeploymentsOK{}
}

/*DeploymentsOK handles this case with default header values.

OK
*/
type DeploymentsOK struct {
	Payload []*models.Deployment
}

func (o *DeploymentsOK) Error() string {
	return fmt.Sprintf("[GET /deployments][%d] deploymentsOK  %+v", 200, o.Payload)
}

func (o *DeploymentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeploymentsInternalServerError creates a DeploymentsInternalServerError with default headers values
func NewDeploymentsInternalServerError() *DeploymentsInternalServerError {
	return &DeploymentsInternalServerError{}
}

/*DeploymentsInternalServerError handles this case with default header values.

internal server error
*/
type DeploymentsInternalServerError struct {
}

func (o *DeploymentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /deployments][%d] deploymentsInternalServerError ", 500)
}

func (o *DeploymentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
