/*
 * SignalCD
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A PipelineApiController binds http requests to an api service and writes the service results to the http response
type PipelineApiController struct {
	service PipelineApiServicer
}

// NewPipelineApiController creates a default api controller
func NewPipelineApiController(s PipelineApiServicer) Router {
	return &PipelineApiController{service: s}
}

// Routes returns all of the api route for the PipelineApiController
func (c *PipelineApiController) Routes() Routes {
	return Routes{
		{
			"GetPipeline",
			strings.ToUpper("Get"),
			"/api/v1/pipelines/{id}",
			c.GetPipeline,
		},
		{
			"ListPipelines",
			strings.ToUpper("Get"),
			"/api/v1/pipelines",
			c.ListPipelines,
		},
	}
}

// GetPipeline - Get Pipeline by its ID
func (c *PipelineApiController) GetPipeline(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	id := params["id"]
	result, err := c.service.GetPipeline(id)
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}

// ListPipelines - List of Pipelines.
func (c *PipelineApiController) ListPipelines(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.ListPipelines()
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}
