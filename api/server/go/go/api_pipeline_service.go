/*
 * SignalCD
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"errors"
)

// PipelineApiService is a service that implents the logic for the PipelineApiServicer
// This service should implement the business logic for every endpoint for the PipelineApi API.
// Include any external packages or services that will be required by this service.
type PipelineApiService struct {
}

// NewPipelineApiService creates a default api service
func NewPipelineApiService() PipelineApiServicer {
	return &PipelineApiService{}
}

// CreatePipeline - Create a new Pipeline.
func (s *PipelineApiService) CreatePipeline(pipeline Pipeline) (interface{}, error) {
	// TODO - update CreatePipeline with the required logic for this service method.
	// Add api_pipeline_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'CreatePipeline' not implemented")
}

// GetPipeline - Get Pipeline by its ID
func (s *PipelineApiService) GetPipeline(id string) (interface{}, error) {
	// TODO - update GetPipeline with the required logic for this service method.
	// Add api_pipeline_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'GetPipeline' not implemented")
}

// ListPipelines - List of Pipelines.
func (s *PipelineApiService) ListPipelines() (interface{}, error) {
	// TODO - update ListPipelines with the required logic for this service method.
	// Add api_pipeline_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.
	return nil, errors.New("service method 'ListPipelines' not implemented")
}
