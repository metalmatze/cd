/*
 * SignalCD
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A DeploymentApiController binds http requests to an api service and writes the service results to the http response
type DeploymentApiController struct {
	service DeploymentApiServicer
}

// NewDeploymentApiController creates a default api controller
func NewDeploymentApiController(s DeploymentApiServicer) Router {
	return &DeploymentApiController{ service: s }
}

// Routes returns all of the api route for the DeploymentApiController
func (c *DeploymentApiController) Routes() Routes {
	return Routes{ 
		{
			"GetCurrentDeployment",
			strings.ToUpper("Get"),
			"/api/v1/deployments/current",
			c.GetCurrentDeployment,
		},
		{
			"ListDeployments",
			strings.ToUpper("Get"),
			"/api/v1/deployments",
			c.ListDeployments,
		},
	}
}

// GetCurrentDeployment - Get the current Deployment
func (c *DeploymentApiController) GetCurrentDeployment(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.GetCurrentDeployment()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}

// ListDeployments - List Deployments
func (c *DeploymentApiController) ListDeployments(w http.ResponseWriter, r *http.Request) { 
	result, err := c.service.ListDeployments()
	if err != nil {
		w.WriteHeader(500)
		return
	}
	
	EncodeJSONResponse(result, nil, w)
}
