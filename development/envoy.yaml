apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy
spec:
  selector:
    matchLabels:
      app: envoy
  template:
    metadata:
      labels:
        app: envoy
    spec:
      containers:
      - name: envoy
        image: envoyproxy/envoy
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 10000
        volumeMounts:
          - mountPath: /etc/envoy/
            name: config
      volumes:
      - name: config
        configMap:
          name: envoy
---
kind: Service
apiVersion: v1
metadata:
  name: envoy
spec:
  type: ClusterIP
  selector:
    app: envoy
  ports:
  - name: http
    protocol: TCP
    port: 10000
    targetPort: 10000
  - name: admin
    protocol: TCP
    port: 9901
    targetPort: 9901
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy
data:
  envoy.yaml: |
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address: { address: 0.0.0.0, port_value: 9901 }

    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address: { address: 0.0.0.0, port_value: 6060 }
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              codec_type: auto
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match: { prefix: "/" }
                    route: { cluster: ui_service }
              http_filters:
              - name: envoy.router
      clusters:
      - name: ui_service
        connect_timeout: 0.25s
        type: logical_dns
        http2_protocol_options: {}
        lb_policy: round_robin
        hosts: [{ socket_address: { address: signalcd-ui.signalcd.svc.cluster.local, port_value: 6662 }}]
