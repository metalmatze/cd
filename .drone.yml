---
kind: pipeline
name: build

platform:
  os: linux
  arch: amd64

steps:
- name: build
  pull: always
  image: golang:1.14
  commands:
  - make cmd/agent/agent
  - make cmd/api/api
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
    GOPROXY: https://proxy.golang.org

- name: ui
  pull: always
  image: node:14.4.0
  commands:
  - make ui/bundle.js
  - mkdir -p ./cmd/api/assets
  - cp ./ui/index.html ./ui/bundle.js ./cmd/api/assets

- name: docker-api
  image: plugins/docker
  settings:
    context: ./cmd/api/
    dockerfile: cmd/api/Dockerfile
    password:
      from_secret: quay_password
    registry: quay.io
    repo: quay.io/signalcd/api
    username:
      from_secret: quay_username
  when:
    branch:
    - master
    event:
    - push

- name: docker-agent
  image: plugins/docker
  settings:
    context: ./cmd/agent/
    dockerfile: cmd/agent/Dockerfile
    password:
      from_secret: quay_password
    registry: quay.io
    repo: quay.io/signalcd/agent
    username:
      from_secret: quay_username
  when:
    branch:
    - master
    event:
    - push

---
kind: pipeline
name: test

platform:
  os: linux
  arch: amd64

steps:
- name: test-unit
  pull: always
  image: golang:1.14
  commands:
  - make test-unit
  environment:
    CGO_ENABLED: 1
    GO111MODULE: on
    GOPROXY: https://proxy.golang.org

---
kind: pipeline
name: code-generation

platform:
  os: linux
  arch: amd64

steps:
- name: goimports
  pull: always
  image: golang:1.14
  commands:
  - make .bingo/bin/goimports
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
    GOPROXY: https://proxy.golang.org

- name: api/client/go
  image: openapitools/openapi-generator-cli:v4.3.1
  commands:
  - apk add -U git make
  - make api/client/go
  - git diff --exit-code api/client/go
  environment:
    OPENAPI: /usr/local/bin/docker-entrypoint.sh

- name: api/client/javascript
  image: openapitools/openapi-generator-cli:v4.3.1
  commands:
  - apk add -U git make
  - make api/client/javascript
  - git diff --exit-code api/client/javascript
  environment:
    OPENAPI: /usr/local/bin/docker-entrypoint.sh

- name: api/server/go
  image: openapitools/openapi-generator-cli:v4.3.1
  commands:
  - apk add -U git make
  - make api/server/go
  - git diff --exit-code api/server/go
  environment:
    OPENAPI: /usr/local/bin/docker-entrypoint.sh

---
kind: pipeline
name: checks

platform:
  os: linux
  arch: amd64

steps:
- name: build-kubernetes-status
  pull: always
  image: golang:1.14
  commands:
  - make cmd/checks/kubernetes-status/kubernetes-status
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
    GOPROXY: https://proxy.golang.org

- name: docker-kubernetes-status
  image: plugins/docker
  settings:
    context: cmd/checks/kubernetes-status
    dockerfile: cmd/checks/kubernetes-status/Dockerfile
    password:
      from_secret: quay_password
    registry: quay.io
    repo: quay.io/signalcd/check-kubernetes-status
    username:
      from_secret: quay_username
  when:
    branch:
    - master
    event:
    - push

- name: build-http
  pull: always
  image: golang:1.14
  commands:
  - make cmd/checks/http/http
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
    GOPROXY: https://proxy.golang.org

- name: docker-http
  image: plugins/docker
  settings:
    context: cmd/checks/http
    dockerfile: cmd/checks/http/Dockerfile
    password:
      from_secret: quay_password
    registry: quay.io
    repo: quay.io/signalcd/check-http
    username:
      from_secret: quay_username
  when:
    branch:
    - master
    event:
    - push

---
kind: pipeline
name: plugins

platform:
  os: linux
  arch: amd64

steps:
- name: build-drone
  pull: always
  image: golang:1.14
  commands:
  - make cmd/plugins/drone/drone
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
    GOPROXY: https://proxy.golang.org

- name: docker-drone
  image: plugins/docker
  settings:
    context: cmd/plugins/drone
    dockerfile: cmd/plugins/drone/Dockerfile
    password:
      from_secret: quay_password
    registry: quay.io
    repo: quay.io/signalcd/drone
    username:
      from_secret: quay_username
  when:
    branch:
    - master
    event:
    - push

---
kind: pipeline
name: examples

platform:
  os: linux
  arch: amd64

steps:
- name: docker-examples-cheese0
  image: plugins/docker
  settings:
    context: examples/cheese0
    dockerfile: examples/cheese0/Dockerfile
    password:
      from_secret: quay_password
    registry: quay.io
    repo: quay.io/signalcd/examples
    tags:
    - cheese0
    username:
      from_secret: quay_username
  when:
    branch:
    - master
    event:
    - push

- name: docker-examples-cheese1
  image: plugins/docker
  settings:
    context: examples/cheese1
    dockerfile: examples/cheese1/Dockerfile
    password:
      from_secret: quay_password
    registry: quay.io
    repo: quay.io/signalcd/examples
    tags:
    - cheese1
    username:
      from_secret: quay_username
  when:
    branch:
    - master
    event:
    - push

- name: docker-examples-cheese2
  image: plugins/docker
  settings:
    context: examples/cheese2
    dockerfile: examples/cheese2/Dockerfile
    password:
      from_secret: quay_password
    registry: quay.io
    repo: quay.io/signalcd/examples
    tags:
    - cheese2
    username:
      from_secret: quay_username
  when:
    branch:
    - master
    event:
    - push

...
